# Dockerfile.jupyter-notebook.amd64 - REVISED BASE

# Stage 1: Build & Python Setup (Use official multi-arch Python image)
# We use the python:3.11-slim tag as a base, which supports multi-arch builds robustly.
# This ensures that when building for linux/amd64, you get a clean AMD64 base.
FROM python:3.11-slim as build

USER root
# Install build tools, git, and essential packages (apt-get commands from your original Dockerfile)
RUN apt-get update && apt-get install -y --no-install-recommends \
    ca-certificates curl gnupg git wget \
    build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev tk-dev \
    # Clean up APT cache immediately to reduce final image size
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# --- NO PYTHON SOURCE COMPILATION NEEDED HERE! ---
# The base image already provides the Python 3.11 environment. 
# We skip the complex source install steps entirely, significantly cleaning up the Dockerfile.

# Install the code-server binary
ENV CODE_SERVER_VERSION=latest
RUN curl -fsSL https://code-server.dev/install.sh | sh

# --- Docker CLI Installation ---
# ... (Re-insert your entire Docker CLI block here, using the updated syntax)
# Note: You'll need to re-install the apt-related packages from your original Dockerfile 
# if they were removed in the build stage.

# Grant permissions to the 'coder' user (usually uid 1000 in official images)
# Since 'codercom/code-server' is designed around the 'coder' user, we'll keep that convention.
# You may need to create the user if the base image doesn't provide it.
RUN useradd -m -s /bin/bash coder

# --- VIRTUAL ENVIRONMENT AND PACKAGE INSTALLATION ---

USER coder
WORKDIR /home/coder

# Create the virtual environment using the system's Python 3.11
# This is now reliably 3.11 because the base image is Python:3.11-slim
RUN python3 -m venv venv

# Install Ray, Jupyter, and core ML/Data packages into the venv
RUN venv/bin/pip install "ray[all]" ipykernel jupyterlab notebook pandas scikit-learn

# --- VS CODE EXTENSION INSTALLATION ---
# Install VS Code extensions for the 'coder' user
RUN code-server --install-extension ms-python.python \
    && code-server --install-extension ms-toolsai.jupyter \
    && code-server --install-extension eamodio.gitlens

# Final command to start code-server
CMD ["sh", "-c", ". /home/coder/venv/bin/activate && code-server --bind-addr 0.0.0.0:8080 ."]
